{"version":3,"file":"static/js/645.135361f6.chunk.js","mappings":";mOAmEMA,EAAM,SAAH,GAAmC,IAA7BC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAUC,GAAK,YAC9BC,EAAY,GAIhB,YAHYC,GAARJ,IACFG,EAAS,gBAAYH,KAEhB,wBAAKK,UAAS,aAAQF,GAAaF,OAAK,QAAIK,UAAW,UAAaL,IAAaC,GAC1F,EAkBA,UAhBA,WACE,OACE,4BACE,SAACH,EAAG,CAACC,KAAK,QAAQC,MAAO,CAAEM,gBAAiB,aAAc,kCAG1D,SAACR,EAAG,CAACC,KAAK,SAASC,MAAO,CAAEM,gBAAiB,QAAS,8BAGtD,SAACR,EAAG,CAACC,KAAK,QAAQC,MAAO,CAAEM,gBAAiB,UAAW,gCAK7D,wBChFa,IAAIC,EAAEC,EAAQ,MAASC,EAAEC,OAAM,IAAK,iBAAiBC,EAAED,OAAM,IAAK,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAET,EAAEU,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAASzB,EAAE0B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAE9B,MAAM4B,EAAEO,OAAOpB,EAAEqB,QAAQ,CAACC,EAAQC,SAAS5B,EAAE2B,EAAQE,IAAIhB,EAAEc,EAAQG,KAAKjB,wBCPxWkB,EAAOJ,QAAU,EAAjBI","sources":["exercise/05.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["// Styling\n// http://localhost:3000/isolated/exercise/05.js\n\n// ### Styling ###\n\n// import * as React from 'react'\n// import '../box-styles.css'\n\n// üê® add a className prop to each div and apply the correct class names\n// based on the text content\n// üí∞ Here are the available class names: box, box--large, box--medium, box--small\n// üí∞ each of the elements should have the \"box\" className applied\n\n// üê® add a style prop to each div so their background color\n// matches what the text says it should be\n// üê® also use the style prop to make the font italic\n// üí∞ Here are available style attributes: backgroundColor, fontStyle\n\n// const smallBox = <div className='box box--small' style={{ backgroundColor: 'lightblue', fontStyle: 'italic' }}>small lightblue box</div>\n// const mediumBox = <div className='box box--medium' style={{ backgroundColor: 'pink', fontStyle: 'italic' }}>medium pink box</div>\n// const largeBox = <div className='box box--large' style={{ backgroundColor: 'orange', fontStyle: 'italic' }}>large orange box</div>\n\n// function App() {\n//   return (\n//     <div>\n//       {smallBox}\n//       {mediumBox}\n//       {largeBox}\n//     </div>\n//   )\n// }\n\n// export default App\n\n// ### Extra Credit - Create a custom component ###\n\n// import * as React from 'react'\n// import '../box-styles.css'\n\n// const Box = ({className,style,...props}) => {\n//   console.log(props);\n//   return <div className={`box ${className}`} style={{fontStyle:'italic', ...style}} {...props}/>\n// };\n\n// function App() {\n//   return (\n//     <div>\n//       <Box className=\"box--small\" style={{ backgroundColor: 'lightblue' }}>\n//         small lightblue box\n//       </Box>\n//       <Box className=\"box--medium\" style={{ backgroundColor: 'pink' }}>\n//         medium pink box\n//       </Box>\n//       <Box className=\"box--large\" style={{ backgroundColor: 'orange' }}>\n//         large orange box\n//       </Box> \n//     </div>\n//   )\n// }\n\n// export default App\n\n// ### Extra Credit - accept a size prop to encapsulate styling ###\n\nimport * as React from 'react'\nimport '../box-styles.css'\n\nconst Box = ({ size, style, ...props }) => {\n  let classSize = \"\";\n  if (size != undefined) {\n    classSize = ` box--${size}`;\n  }\n  return <div className={`box${classSize}`} style={{ fontStyle: 'italic', ...style }} {...props} />\n};\n\nfunction App() {\n  return (\n    <div>\n      <Box size=\"small\" style={{ backgroundColor: 'lightblue' }}>\n        small lightblue box\n      </Box>\n      <Box size=\"medium\" style={{ backgroundColor: 'pink' }}>\n        medium pink box\n      </Box>\n      <Box size=\"large\" style={{ backgroundColor: 'orange' }}>\n        large orange box\n      </Box>\n    </div>\n  )\n}\n\nexport default App","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["Box","size","style","props","classSize","undefined","className","fontStyle","backgroundColor","f","require","k","Symbol","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}